---
pipeline:
  name: relHumidityBuoy_statistics
transform:
  cmd:
  - Rscript
  - ./flow.stat.basc.R
  - DirIn=$DIR_IN
  - DirOut=/pfs/out
  - DirErr=/pfs/out/errored_datums
  - FileSchmStat=$FILE_SCHEMA_STATS
  - WndwAgr=030
  - TermStat1=relativeHumidity:mean|minimum|maximum|variance|numPts|stdEr|expUncert(wrap.ucrt.dp01.cal.cnst)
  - TermStat2=temperature:mean|minimum|maximum|variance|numPts|stdEr|expUncert(wrap.ucrt.dp01.cal.cnst)
  - TermStat3=dewPoint:mean|minimum|maximum|variance|numPts|stdEr|expUncert(wrap.ucrt.dp01.rh.dew.frst.pt)
  image: quay.io/battelleecology/neon-is-stat-basc-r:v1.0.3
  image_pull_secrets:
  - battelleecology-quay-read-all-pull-secret
  env:
    LOG_LEVEL: DEBUG
    PARALLELIZATION_INTERNAL: '1' # Parallelization within R. If increased, adjust resource requests appropriately.
input:
  cross:
  - pfs:
      name: DIR_IN
      repo: relHumidityBuoy_pre_statistics_group
      glob: /*/*/*
  - pfs:
      name: FILE_SCHEMA_STATS
      repo: relHumidityBuoy_avro_schemas
      glob: /relHumidityBuoy/relHumidityBuoy_dp01_stats.avsc
parallelism_spec:
  constant: 1
resource_requests: 
  memory: 400M
  cpu: 1.2
autoscaling: true
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
pod_patch: |-
  [
    { "op": "replace",
      "path":"/containers/1/resources/requests/memory",
      "value":"500M"
    },
    { "op": "replace",
      "path": "/containers/1/resources/requests/cpu",
      "value": "0.2"
    }
  ]
