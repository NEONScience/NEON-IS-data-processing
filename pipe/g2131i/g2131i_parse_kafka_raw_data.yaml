---
pipeline:
  name: g2131i_parse_kafka_raw_data
transform:
  image: us-central1-docker.pkg.dev/neon-shared-service/bei/neon-raw-data-parser:sha-95c3872
  cmd: ["/bin/bash"]
  stdin:
  - "#!/bin/bash"
  - "python3 -m picarro_data_parser_main"
  env:
    # if use default PARSED_START_INDEX and PARSED_END_INDEX, parse all elements in parse_field
    # if use default for FIELD_START_INDEX and FIELD_END_INDEX,
    #   skip first 3 fields (source_id, site_id, readout_time) in parsed schema
    OUT_PATH: /pfs/out
    RELATIVE_PATH_INDEX: "4"
    LOG_LEVEL: DEBUG 
    SOURCE_TYPE: "g2131i_raw"
    PARSE_FIELD: "measurement_buffer"
    PARSED_START_INDEX: "1" # skip first element 'time' in parse_field for parsing
    PARSED_SCHEMA_PATH: /usr/src/app/schemas/g2131i/g2131i_metrics.avsc
    FIELD_START_INDEX: "4" # skip instrument_status for parsing
input:
  pfs:
    name: DATA_PATH
    repo: g2131i_data_source_kafka
    glob: /g2131i_raw/(*)/(*)/(*)/(*)
parallelism_spec:
  constant: 5
autoscaling: true
resource_requests:
  memory: 500M
  cpu: 0.5
resource_limits:
  memory: 1G
  cpu: 1
sidecar_resource_requests:
  memory: 3G
  cpu: 1
datum_set_spec:
  number: 1
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
