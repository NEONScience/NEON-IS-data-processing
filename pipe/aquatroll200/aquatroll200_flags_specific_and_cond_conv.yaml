---
pipeline:
  name: aquatroll200_flags_specific_and_cond_conv
transform:
  image: quay.io/battelleecology/neon-is-troll-flags-cond-conv-r:v0.0.9
  image_pull_secrets:
  - battelleecology-quay-read-all-pull-secret
  cmd: ["/bin/bash"]
  stdin:
  - "#!/bin/bash"
  - '# Refresh interim directories with each datum (otherwise they persist and cause probs)'
  - rm -r -f /tmp/pfs/interimData
  - rm -r -f /tmp/pfs/interimDataCopy
  - mkdir -p /tmp/pfs/interimData
  - mkdir -p /tmp/pfs/interimDataCopy
  - '# Run first module - troll_flags_specific '
  - Rscript ./flow.troll.flags.R
      DirIn=$DIR_IN
      DirOut=/tmp/pfs/interimData
      DirErr=/pfs/out/errored_datums
      FileSchmQf=$SCHEMA_FLAGS_SPEC
  - '# Copy output to another interim folder to destroy links (cannot daisy chain links from pfs input to output)'
  - cp -rL /tmp/pfs/interimData/* /tmp/pfs/interimDataCopy
  - rm -r -f /tmp/pfs/interimData/*
  - '# Run second module - conductivity conversion'
  - Rscript ./flow.troll.cond.conv.R
    DirIn=/tmp/pfs/interimDataCopy
    DirOut=/pfs/out
    DirErr=/pfs/out/errored_datums
    FileSchmData=$FILE_SCHEMA_DATA_COND_CONV
    FileSchmQf=$SCHEMA_FLAGS_SPEC_TEMP
  env:
    LOG_LEVEL: DEBUG
input:
  cross:
  - pfs:
      name: DIR_IN
      repo: aquatroll200_calibration_group_and_convert
      glob: /aquatroll200/*/*/*/
  - pfs:
      name: SCHEMA_FLAGS_SPEC
      repo: troll_shared_avro_schemas
      glob: /troll_shared/flags_troll_specific.avsc
  - pfs:
      name: FILE_SCHEMA_DATA_COND_CONV
      repo: aquatroll200_avro_schemas
      glob: /aquatroll200/aquatroll200_cond_corrected.avsc
  - pfs:
      name: SCHEMA_FLAGS_SPEC_TEMP
      repo: troll_shared_avro_schemas
      glob: /troll_shared/flags_troll_specific_temp.avsc
parallelism_spec:
  constant: 3
autoscaling: true
resource_requests:
  memory: 500M
  cpu: 1.2
resource_limits:
  memory: 1G
  cpu: 2
sidecar_resource_requests:
  memory: 1G
  cpu: 0.5
datum_set_spec:
  number: 1
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
