pipeline:
  name: sunav2_data_parser
transform:
  image: us-central1-docker.pkg.dev/neon-shared-service/bei/neon-raw-data-parser:v4.3.0
  cmd:
    - /bin/bash
  stdin:
    - '#!/bin/bash'
    - python3 -m raw_data_parser.data_parser_main
  env:
    # if use default PARSED_START_INDEX and PARSED_END_INDEX, parse all elements in parse_field
    # if use default for FIELD_START_INDEX and FIELD_END_INDEX,
    #   skip first 3 fields (source_id, site_id, readout_time) in parsed schema
    LOG_LEVEL: INFO 
    OUT_PATH: /pfs/out 
    PARSE_FIELD: serial_output
    RELATIVE_PATH_INDEX: "4"
    PARSED_SCHEMA_PATH: /usr/src/app/schemas/sunav2/sunav2.avsc 
    SOURCE_TYPE: 'sunav2_raw'
input:
  pfs:
    name: DATA_PATH
    repo: sunav2_data_source_kafka
    glob: /sunav2_raw/*/*/*
parallelism_spec:
  constant: 3
autoscaling: true
resource_requests:
  memory: 500M
  cpu: 0.5
resource_limits:
  memory: 1G
  cpu: 1.5
sidecar_resource_requests:
  memory: 2G
  cpu: 0.5
datum_set_spec:
  number: 1
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: 'true'
    nodepool.neonscience.org/pipeline: 'yes'
    cloud.google.com/gke-spot: 'true'
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
