---
pipeline:
  name: parQuantumLine_level1_group_and_consolidate
transform:
  image_pull_secrets:
  - battelleecology-quay-read-all-pull-secret
  image: quay.io/battelleecology/level1_group_and_consolidate:v0.0.2
  cmd:
  - "/bin/bash"
  stdin:
  - "#!/bin/bash"
  - '# Refresh interim directories with each datum (otherwise they persist and cause probs)'
  - rm -r -f /usr/interimData/*
  - '# Set some environment variables for the first module'
  - export OUT_PATH=$OUT_PATH_1
  - '# Run first module - filter-joiner (using environment variables below as input parameters)'
  - python3 -m filter_joiner.filter_joiner_main
  - '# Set some environment variables for the second module'
  - export OUT_PATH=$OUT_PATH_2
  - '# Run second module - level 1 consolidate (using environment variables below as input parameters)'
  - python3 -m level1_consolidate.level1_consolidate_main
  env:
    # Environment variables for filter-joiner
    CONFIG: |
      ---
      # In Pachyderm root will be index 0, 'pfs' index 1, and the repo name index 2.
      # Metadata indices will typically begin at index 3.
      # Use unix-style glob pattern to select the desired directories in each repo 
      input_paths:
        - path:
            name: QUALITY_METRICS_PATH
            # Filter for data directory
            glob_pattern: /pfs/QUALITY_METRICS_PATH/*/*/*/*/*/*/quality_metrics/**
            # Join on group ID (already joined below by day)
            join_indices: [6]
        - path:
            name: STATISTICS_PATH
            # Filter for data directory
            glob_pattern: /pfs/STATISTICS_PATH/*/*/*/*/*/*/stats/**
            # Join on group ID(already joined below by day)
            join_indices: [6]
        - path:
            name: GROUP_PATH
            # Grab group information
            glob_pattern: /pfs/GROUP_PATH/*/*/*/*/group/**
            # Join on group ID(already joined below by day)
            join_indices: [6]
        - path:
            name: LOCATION_PATH
            # Grab location information
            glob_pattern: /pfs/LOCATION_PATH/*/*/*/*/*/*/location/**
            # Join on group ID(already joined below by day)
            join_indices: [6]
    OUT_PATH_1: /usr/interimData # This will be transfered to OUT_PATH for the first module
    LOG_LEVEL: INFO # Also shared with level 1 consolidate module
    RELATIVE_PATH_INDEX: "3" # Also shared with level 1 consolidate module
    LINK_TYPE: COPY # options are COPY or SYMLINK
    # Environment variables for level 1 consolidation
    IN_PATH: /usr/interimData
    OUT_PATH_2: /pfs/out # This will be transfered to OUT_PATH for the second module
    GROUP_INDEX: "6"
    GROUP_METADATA_INDEX: "7"
    GROUP_METADATA_NAME: group
    DATA_TYPE_INDEX: "9"
    DATA_TYPE_NAMES: location,stats,quality_metrics
input:
  join:
  - pfs:
      name: QUALITY_METRICS_PATH
      repo: parQuantumLine_qm_group_and_compute
      glob: /(*)/(*)/(*)
      joinOn: $1/$2/$3
      empty_files: false # Make sure this is false for LINK_TYPE=COPY
  - pfs:
      name: STATISTICS_PATH
      repo: parQuantumLine_stats_group_and_compute
      glob: /(*)/(*)/(*)
      joinOn: $1/$2/$3
      empty_files: false # Make sure this is false for LINK_TYPE=COPY
  - pfs:
      name: GROUP_PATH
      repo: parQuantumLine_group_path
      glob: /(*)/(*)/(*)
      joinOn: $1/$2/$3
      empty_files: false # Make sure this is false for LINK_TYPE=COPY
  - pfs:
      name: LOCATION_PATH
      repo: parQuantumLine_group_path
      glob: /(*)/(*)/(*)
      joinOn: $1/$2/$3
      empty_files: false # Make sure this is false for LINK_TYPE=COPY
output_branch: master
parallelism_spec:
  constant: 1
resource_requests:
  memory: 200M
  cpu: 0.1
autoscaling: true
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
pod_patch: |-
  [
    { "op": "replace",
      "path":"/containers/1/resources/requests/memory",
      "value":"500M"
    },
    { "op": "replace",
      "path": "/containers/1/resources/requests/cpu",
      "value": "0.3"
    }
  ]


