---
pipeline:
  name: parQuantumLine_pub_format_and_package
transform:
  image: us-central1-docker.pkg.dev/neon-shared-service/neonscience/neon-is-pub-grp-pack:sha-90d1460
  cmd:
  - sh
  - "-c"
  - |-
    /bin/bash <<'EOF'
    # Use bash-scrict mode. See http://redsymbol.net/articles/unofficial-bash-strict-mode/
    set -euo pipefail
    IFS=$'\n\t'
    
    # Refresh interim directories with each datum (otherwise they persist and cause probs)
    rm -rf $OUT_PATH_TRANSFORMER
    rm -rf $OUT_PATH_PACKAGER
    mkdir $OUT_PATH_TRANSFORMER
    mkdir $OUT_PATH_PACKAGER

    # Set some environment variables for the second module
    export DATA_PATH=$GROUPED_PATH
    export OUT_PATH=$OUT_PATH_TRANSFORMER
    
    # Run pub_workbook_loader to load pub workbooks for pub_transformer and os_table_loader.
    python3 -m pub_workbook_loader.pub_workbook_loader_main
    
    # Run pub_transformer (using environment variables below as input parameters)
    python3 -m pub_transformer.pub_transformer_main
    
    # Run pub_packager. Packager needs to be run at monthly glob. Get those paths.
    export OUT_PATH=$OUT_PATH_PACKAGER
    product_month_paths="${OUT_PATH_TRANSFORMER}/*/*/*"
    for path in $product_month_paths; do
      echo "Processing product-month path $path"
      export DATA_PATH=$path
      python3 -m pub_packager.pub_packager_main
    done
    
    # Clean up after pub_transformer.
    rm -rf $OUT_PATH_TRANSFORMER
    
    # Run pub_files.
    export OUT_PATH=$OUT_PATH_PUBFILES
    export IN_PATH=$OUT_PATH_PACKAGER
    export LOCATION_PATH=$GROUPED_PATH
    python3 -m pub_files.main
    
    EOF
  env:
    # Environment variables for 2nd (part A) module: pub_workbook_loader.
    OUT_PATH_WORKBOOK: "/tmp/pub_workbooks"
    PRODUCTS: NEON.DOM.SITE.DP1.00066.001 # Format: NEON.DOM.SITE.DPX.XXXXX.XXX,NEON.DOM.SITE.DPX.XXXXX.XXX,etc

    # Environment variables for 2nd module (part B): pub_transformer.
    LOG_LEVEL: INFO
    PRODUCT_INDEX: '3' # input path index of the data product identifier. Also shared with pub_packager.
    YEAR_INDEX: '4'
    MONTH_INDEX: '5'
    DAY_INDEX: '7'
    DATA_TYPE_INDEX: '8'
    GROUP_METADATA_DIR: group 
    DATA_PATH_PARSE_INDEX: '2'
    OUT_PATH_TRANSFORMER: "/tmp/pub_transformer"
    WORKBOOK_PATH: "/tmp/pub_workbooks"

    # Environment variables for 3rd module: pub_packager. Also uses PRODUCT_INDEX from pub_transformer.
    OUT_PATH_PACKAGER: "/tmp/pub_packager"
    ERR_PATH_PACKAGER: "/pfs/out/packager/errored_datums"
    PUBLOC_INDEX: '6' # input path index of the pub package location (typically the site)
    DATE_INDEX: '4' # Starting index of date in path (i.e. year index)
    DATE_INDEX_LENGTH: '2' # length of date index for pub package (should be 2 for monthly)
    SORT_INDEX: '10' # File name index corresponding to date field (delimiter = .)

    # Environment variables for 3rd module: pub_files.
    OUT_PATH_PUBFILES: "/pfs/out"
    RELATIVE_PATH_INDEX: '3'
    DB_SECRETS_PATH: /var/db_secret
    GITHUB_PEM_PATH: /var/github_secret/key
    GITHUB_APP_ID: '300002'
    GITHUB_INSTALLATION_ID: '34765458'
    GITHUB_HOST: https://api.github.com
    GITHUB_REPO_OWNER: NEONScience
    GITHUB_README_REPO: neon-metadata-docs
    GITHUB_README_PATH: readme/template.j2
    GITHUB_EML_REPO: neon-metadata-docs
    GITHUB_EML_BOILERPLATE_PATH: eml/neon_components/NEON_EML_Boilerplate.xml
    GITHUB_EML_CONTACT_PATH: eml/neon_components/neon_contact.xml
    GITHUB_EML_INTELLECTUAL_RIGHTS_PATH: eml/neon_components/neon_intellectualRights.xml
    GITHUB_EML_UNIT_TYPES_PATH: eml/neon_components/neon_unitTypes.xml
    GITHUB_EML_UNITS_PATH: eml/neon_components/NEON_units.txt
    GITHUB_BRANCH: main

  secrets:
    - name: pdr-secret
      mount_path: /var/db_secret
    - name: github-neonscience-app-secret
      mount_path: /var/github_secret

input:
  pfs:
    name: GROUPED_PATH
    repo: parQuantumLine_pub_group
    # Glob must be product-monthly or product-site-monthly. Product-site-month datums reduce unneccesary republication.
    # path structure is e.g. DP1.00098.001/2023/04/CPER/04 (product/year/month/site/day)
    glob: /*/*/*/*
parallelism_spec:
  constant: 5
autoscaling: true
resource_requests:
  memory: 400M
  cpu: 1
resource_limits:
  memory: 800M
  cpu: 1.2
sidecar_resource_requests:
  memory: 2.4G
  cpu: 0.4
datum_set_spec:
  number: 1
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
