---
pipeline:
  name: parQuantumLine_level1_pub_egress
transform:
  image: quay.io/battelleecology/pub_egress:v2.1.2
  env:
    LOG_LEVEL: INFO
    OUT_PATH: "/pfs/out"
    STARTING_PATH_INDEX: "2" # starting path index to process pub packages. Use "2" to process the whole repo with path structure /pfs/repo_name/...
    BUCKET_NAME: "neon-int-publication/egress-test"
    EGRESS_URL: https://storage.googleapis.com/neon-int-publication/egress-test
  cmd:
  - sh
  - "-c"
  - |-
    /bin/bash <<'EOF'
    # Restructure for egress
    python3 -m pub_egress.pub_egress.app
    # If there is output, egress it
    dirs=$(find $OUT_PATH/* -type d)
    if [[ ${dirs} ]]; then
      echo "Syncing files to bucket"
      rclone \
        --no-check-dest \
        --copy-links \
        --gcs-bucket-policy-only \
        --gcs-no-check-bucket \
        copy \
        "${OUT_PATH}" \
        ":gcs://${BUCKET_NAME}"
      echo "Done"
    fi
    EOF
input: 
  group:
  - join:
    - pfs: 
        name: DATA_PATH
        repo: parQuantumLine_level1_pub_files
        # Glob must be at each intended pub datum (i.e. each site/year/month)
        glob: /*/(*/*)
        joinOn: $1
        group_by: $1
    - pfs: 
        repo: parQuantumLine_cron_monthly_and_pub_control
        glob: /(*/*)
        joinOn: $1
        group_by: $1
resource_requests:
  memory: 300M
  cpu: 0.3
autoscaling: true
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
pod_patch: |-
  [
    { "op": "replace",
      "path":"/containers/1/resources/requests/memory",
      "value":"2G"
    },
    { "op": "replace",
      "path": "/containers/1/resources/requests/cpu",
      "value": "1"
    }
  ]
