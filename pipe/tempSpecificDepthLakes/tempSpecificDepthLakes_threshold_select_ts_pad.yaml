---
pipeline:
  name: tempSpecificDepthLakes_threshold_select_ts_pad
transform:
  image: us-central1-docker.pkg.dev/neon-shared-service/neonscience/neon-is-thsh-slct-ts-pad:v2.1.0
  cmd:
  - sh
  - "-c"
  - |-
    /bin/bash <<'EOF'
    # Use bash-scrict mode. See http://redsymbol.net/articles/unofficial-bash-strict-mode/
    set -euo pipefail
    IFS=$'\n\t'
    
    # Refresh interim directories with each datum (otherwise they persist and cause probs)
    rm -rf /tmp/threshold_select
    rm -rf /tmp/threshold_selectCopy
    mkdir -p /tmp/threshold_select
    
    # Run first module - threshold_select
    Rscript ./flow.thsh.slct.R \
      DirIn=$REPO_LOCATIONS \
      DirOut=/tmp/threshold_select \
      DirErr=/pfs/out/errored_datums \
      FileThsh=$FILE_THRESHOLDS \
      "TermCtxt1=depth0WaterTemp" \
      "TermCtxt2=depth1WaterTemp" \
      "TermCtxt3=depth2WaterTemp" \
      "TermCtxt4=depth3WaterTemp" \
      "TermCtxt5=depth4WaterTemp" \
      "TermCtxt6=depth5WaterTemp" \
      "TermCtxt7=depth6WaterTemp" \
      "TermCtxt8=depth7WaterTemp" \
      "TermCtxt9=depth8WaterTemp" \
      "TermCtxt10=depth9WaterTemp" \
      "DirSubCopy=location|data"
    
    # Copy output to another interim folder to destroy links (cannot daisy chain links from pfs input to output)
    cp -rL /tmp/threshold_select /tmp/threshold_selectCopy || : # Allow to fail without exit code (happens if step above produced no output) 
    rm -r -f /tmp/threshold_select 
    
    # Run second module - timeseries_padder
    python3 -m timeseries_padder.timeseries_padder.variable_pad_main --yearindex 3 --monthindex 4 --dayindex 5 --locindex 8 --subdirindex 9
    
    EOF
  env:
    DATA_PATH: /tmp/threshold_selectCopy
    OUT_PATH: /pfs/out
    LOG_LEVEL: INFO
    PAD_DIR: data
    COPY_DIR: location # Can be multiple, separated by commas without spaces. Directories other than the pad directory and threshold directory to copy to the output (e.g. location,flags). Set to something like 'none' if none other are desired.
    RELATIVE_PATH_INDEX: '3'
    PARALLELIZATION_INTERNAL: '3' # For threshold select module
output_branch: master
input:
  cross:
  - pfs:
      name: REPO_LOCATIONS
      repo: tempSpecificDepthLakes_group_path
      glob: /*/*/*
  - pfs:
      name: FILE_THRESHOLDS
      repo: tempSpecificDepthLakes_threshold
      glob: /thresholds.json
parallelism_spec:
  constant: 5
autoscaling: true
resource_requests:
  memory: 800M
  cpu: 3.3
resource_limits:
  memory: 2G
  cpu: 5
sidecar_resource_requests:
  memory: 3G
  cpu: 0.3
datum_set_spec:
  number: 1
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
