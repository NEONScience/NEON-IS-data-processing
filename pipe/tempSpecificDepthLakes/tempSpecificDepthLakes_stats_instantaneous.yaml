---
pipeline:
  name: tempSpecificDepthLakes_stats_instantaneous
transform:
  cmd:
  - Rscript
  - ./flow.data.comb.ts.R
  - DirIn=$DIR_IN
  - DirOut=/pfs/out
  - DirErr=/pfs/out/errored_datums
  - FileSchmComb=$SCHEMA_COMB
  - DirComb=data|uncertainty_data
  - NameDirCombOut=stats
  - NameVarTime=readout_time
  - ColKeep=readout_time|timeWndwBgn|timeWndwEnd|depth0WaterTemp|depth0WaterTemp_ucrtExpn|depth1WaterTemp|depth1WaterTemp_ucrtExpn|depth2WaterTemp|depth2WaterTemp_ucrtExpn|depth3WaterTemp|depth3WaterTemp_ucrtExpn|depth4WaterTemp|depth4WaterTemp_ucrtExpn|depth5WaterTemp|depth5WaterTemp_ucrtExpn|depth6WaterTemp|depth6WaterTemp_ucrtExpn|depth7WaterTemp|depth7WaterTemp_ucrtExpn|depth8WaterTemp|depth8WaterTemp_ucrtExpn|depth9WaterTemp|depth9WaterTemp_ucrtExpn|depth10WaterTemp|depth10WaterTemp_ucrtExpn
  - NameFileSufx=_basicStats_001
  image: quay.io/battelleecology/neon-is-data-comb-ts-r:v1.0.0
  image_pull_secrets:
  - battelleecology-quay-read-all-pull-secret
  env:
    LOG_LEVEL: INFO
    PARALLELIZATION_INTERNAL: '1' # Parallelization within R. If increased, adjust resource requests appropriately.
input:
  cross:
  - pfs:
      name: DIR_IN
      repo: tempSpecificDepthLakes_qaqc_plausibility
      glob: /tchain/*/*/*
  - pfs:
      name: SCHEMA_COMB
      repo: avro_schemas_tempSpecificDepthLakes
      glob: /tempSpecificDepthLakes/tempSpecificDepthLakes_dp01_stats_instantaneous.avsc
resource_requests: 
  memory: 100M
  cpu: 0.1
pod_patch: '[{"op":"replace","path":"/containers/1/resources/requests/memory","value":"200M"},{"op":"replace","path":"/containers/1/resources/requests/cpu","value":"0.1"}]'
scheduling_spec:
  node_selector: 
    cloud.google.com/machine-family: n2d
autoscaling: true
