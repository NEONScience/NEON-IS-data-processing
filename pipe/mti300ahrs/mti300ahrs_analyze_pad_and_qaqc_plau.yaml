---
pipeline:
  name: mti300ahrs_analyze_pad_and_qaqc_plau
transform:
  image_pull_secrets:
  - battelleecology-quay-read-all-pull-secret
  image: quay.io/battelleecology/neon-is-ts-pad-anls-qaqc-plau:fe1512ea
  cmd:
  - /bin/bash
  stdin:
  - "#!/bin/bash"
  - '# Refresh interim directories with each datum (otherwise they persist and cause probs)'
  - rm -rf /tmp/pfs/padded_analyzer
  - rm -rf /tmp/pfs/padded_analyzerCopy
  - mkdir -p /tmp/pfs/padded_analyzer
  - '# Run first module - padded_timeseries_analyzer'
  - python3 -m padded_timeseries_analyzer.padded_timeseries_analyzer.padded_timeseries_analyzer_main
  - '# Copy output to another interim folder to destroy links (cannot daisy chain links from pfs input to output)'
  - cp -rL /tmp/pfs/padded_analyzer /tmp/pfs/padded_analyzerCopy 
  - rm -r -f /tmp/pfs/padded_analyzer 
  - '# Run second module - qaqc plausibility'
  - Rscript ./flow.qaqc.plau.R
    DirIn=/tmp/pfs/padded_analyzerCopy
    DirOut=/pfs/out
    DirErr=/pfs/out/errored_datums
    FileSchmQf=$SCHEMA_FLAGS
    "TermTest1=accXaxs:range|step|persistence"
    "TermTest2=accYaxs:range|step|persistence"
    "TermTest3=accZaxs:range|step|persistence"
    "TermTest4=accXaxsDiff:range|step|persistence"
    "TermTest5=accYaxsDiff:range|step|persistence"
    "TermTest6=accZaxsDiff:range|step|persistence"
    "TermTest7=avelXaxs:range|step|persistence"
    "TermTest8=avelYaxs:range|step|persistence"
    "TermTest9=avelZaxs:range|step|persistence"
    "TermTest10=angXaxs:range|step|persistence"
    "TermTest11=angYaxs:range|step|persistence"
    "TermTest12=angZaxs:range|step|persistence"
    "DirSubCopy=threshold|location"
  env:
    # Environment variables for padded timeseries analyzer
    OUT_PATH: /tmp/pfs/padded_analyzer
    LOG_LEVEL: INFO
    RELATIVE_PATH_INDEX: '3'
    # Environment variables for qaqc plausibility
    PARALLELIZATION_INTERNAL: '1'
input:
  cross:
  - pfs:
      name: DATA_PATH
      repo: mti300ahrs_thresh_select_ts_pad
      glob: /amrs/*/*/*/*
  - pfs:
      name: SCHEMA_FLAGS
      repo: mti300ahrs_avro_schemas
      glob: /mti300ahrs/flags_plausibility_mti300ahrs.avsc
parallelism_spec:
  constant: 4
autoscaling: true
resource_requests:
  memory: 20G
  cpu: 1.5
resource_limits:
  memory: 25G
  cpu: 2.5
sidecar_resource_requests:
  memory: 4G
  cpu: 0.3
sidecar_resource_limits:
  memory: 8Gi
  cpu: 1.3
datum_set_spec:
  number: 1
scheduling_spec:
  node_selector:
    cloud.google.com/gke-ephemeral-storage-local-ssd: "true"
    nodepool.neonscience.org/pipeline: "yes"
    cloud.google.com/gke-spot: "true"
pod_spec: |-
  { "tolerations": [
    {
      "key": "nodepool.neonscience.org/pipeline",
      "operator": "Exists"
    },
    {
      "effect": "NoSchedule",
      "key": "cloud.google.com/gke-spot",
      "operator": "Exists"
    }  
  ] }
