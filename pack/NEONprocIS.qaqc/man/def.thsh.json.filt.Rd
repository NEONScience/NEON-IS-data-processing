% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/def.thsh.json.filt.R
\name{def.thsh.json.filt}
\alias{def.thsh.json.filt}
\title{Filter NEON instrumented systems QC JSON-formatted thresholds}
\usage{
def.thsh.json.filt(
  NameFile = NULL,
  strJson = NULL,
  NameFileOut = NULL,
  Term = NULL,
  Ctxt = NULL
)
}
\arguments{
\item{NameFile}{Filename (including relative or absolute path). Must be json format.}

\item{strJson}{Json-formatted text. Only one of NameFile or strJson must be entered.}

\item{NameFileOut}{Filename (optional) for writing the filtered output (in json format). Default is 
NULL, in which case the result is output to the environment}

\item{Term}{String vector of terms (field 'term_name' in the thresholds file/text) to search for. 
Retrieves matches to any Term. Enter NULL (default) if not filtering based on term.}

\item{Ctxt}{# string vector of contexts (field 'context'). Enter NULL (default) if not filtered based 
on context. NOTE: If either \code{Term} or \code{Ctxt} (not both) are populated, the filter will 
return matches to any entry in these inputs, treated individually. If both \code{Term} and \code{Ctxt} 
are populated, AND logic is applied, meaning that the \code{Term} must match one of the Term values 
and \code{Ctxt} must match ALL Context values.}
}
\value{
If NameFileOut is entered, a filtered json file. Otherwise, a list output of the filtered 
thresholds in json format
}
\description{
Definition function. Filter QA/QC threshold information in JSON format (file or text) based
on matching field values.
}
\examples{
Currently none
}
\references{
License: (example) GNU AFFERO GENERAL PUBLIC LICENSE Version 3, 19 November 2007
}
\seealso{
Currently none
}
\author{
Cove Sturtevant \email{csturtevant@battelleecology.org}
}
\keyword{Currently}
\keyword{none}
