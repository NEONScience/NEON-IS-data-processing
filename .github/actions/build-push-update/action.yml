name: "Build a module and push the image"
description: "Builds the module, pushes the image to Artifact Registry"


inputs:
  image-tag:
    required: true

runs:
   using: "composite"
   steps: 
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
            workload_identity_provider: ${{ env.GCP_PROVIDER }}
            service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      # - name: "Docker auth"
      #   shell: bash
      #   run: gcloud auth configure-docker ${{ env.GCP_ARTIFACT_HOST }} --quiet

      # - name: Build image
      #   shell: bash
      #   run: docker build -t ${{ env.IMAGE_NAME }}:latest -f ./modules/${{ env.MODULE_NAME }}/Dockerfile .
      # 
      # - name: Tag image with short SHA
      #   shell: bash
      #   run: docker tag ${{ env.IMAGE_NAME }}  ${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image-tag }} 
      # 
      # - name: Tag image with semantic version
      #   shell: bash
      #   run: docker tag ${{ env.IMAGE_NAME }}  ${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.SEM_VERSION }}
      # 
      # - name: Push image
      #   shell: bash
      #   run: docker push ${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image-tag }}

      # Login to google artifact registry
      # - name: Log into registry ${{ env.GCP_ARTIFACT_HOST }}
      #   uses: 'docker/login-action@v3'
      #   with:
      #       registry: ${{ env.GCP_ARTIFACT_HOST }}
      #       username: 'oauth2accesstoken'
      #       password: ${{ steps.auth.outputs.access_token }}
           
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      # - name: Log into registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #       registry: ${{ env.REGISTRY }}
      #       username: ${{ github.actor }}
      #       password: ${{ env.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
            images: |
              ${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}
         #     ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_NS }}/${{ env.REPO_NAME }}/modules/${{ env.MODULE_NAME }}
         #   tags: |
            # type=schedule
            # type=ref,event=branch
            # type=ref,event=tag
            # type=ref,event=pr
            # type=short_sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
            context: .
       #     push: ${{ github.event_name != 'pull_request' }}
       #     tags: ${{ steps.meta.outputs.tags }}
            tags: ${{ env.SEM_VERSION }}
       
       #     labels: ${{ steps.meta.outputs.labels }}
       
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        
      - name: Install R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
            packages: |
              any::usethis
              any::dplyr
              any::rlang
              any::tidyverse

      - name: Update pipeline spec yamls
        shell: bash
        run: Rscript ./utilities/flow.img.updt.R "./pipe" ".yaml" "${{ env.GCP_REGISTRY }}/${{ env.IMAGE_NAME }}" "${{ inputs.image-tag }}"

      - name: Commit the pipeline yamls
        shell: bash
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "gitHub Actions"
          git diff --name-only
          git tag ${{ env.MODULE_NAME }}/${{ env.SEM_VERSION }}
          git add  -u .
          git commit -m "pipeline yamls updated"  || echo "No yamls updated"
  #        git push origin ${{ env.MODULE_NAME }}/${{ env.SEM_VERSION }}  || echo "No changes to commit"
        