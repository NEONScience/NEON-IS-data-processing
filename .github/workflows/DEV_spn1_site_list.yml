name: DEV-spn1-site-list
on:
  push:
    branches:
      - 'master'
    paths:
      - 'pipe/spn1/site-list.json'
  workflow_dispatch: {} # Allows trigger of workflow from web interface

# Workflow-level concurrency
concurrency: 
  group: ${{
      contains(github.workflow, 'update-dag') ||
      contains(github.workflow, 'site-list') && 'operations-queue'
    || github.workflow
    }}
  cancel-in-progress: false  # Queue them up, don't cancel

jobs:
  put_files:
    runs-on: arc-neon-gke
    #runs-on: ubuntu-latest 
    env:
      PACHD_ADDRESS: grpcs://pachyderm-dev.transitions-nonprod.gcp.neoninternal.org:443
      PACH_TOKEN: ${{ secrets.RepoOwnerPachydermDev }}
      REPO: spn1_site_list # Pachyderm repo
      BRANCH: master 
      IN_PATHS: 'pipe/spn1/site-list.json' # Comma-separated list (no spaces) to one or more paths or directories. Length must match OUT_PATHS. If directory, all files in directory will be placed in pachyderm at corresponding entry of OUT_PATHS. 
      OUT_PATHS: 'site-list.json' # Comma-separated list (no spaces) of corresponding path(s) to place the files(s) in Pachyderm. Must be same length as IN_PATHS. If corresponding entry in IN_PATHS is a file, specify to the file. If corresponding entry in IN_PATHS is a directory, specify to the directory. 
    steps:
      - uses: actions/checkout@v4
      - run: ls -la

      - name: Get Workflow ID with Regex
        id: get-workflow-id
        shell: bash
        run: |
          # Example: Using a simple regex to filter workflow_ref
          # [[ $workflow_ref =~ .*/workflows/*_site_ist.yml@.* ]]
          workflow_ref="${{ github.workflow_ref }}" 

          if [[ $workflow_ref =~ .*/workflows\/.*_site_list\.yml ]] ||
             [[ $workflow_ref =~ .*/workflows\/.*_update_dag\.yml ]]; then
            workflow_file_name="${BASH_REMATCH[0]}"
            echo "Workflow File Name: $workflow_file_name"
            echo "::set-output name=workflow_file_name::$workflow_file_name"
          else
            echo "No Workflow File Name for $workflow_ref"
          fi

      - name: Wait for Filtered Workflow
        uses: kamilchodola/wait-for-workflow-action@1.1.1
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }} # Needs a token with `workflow` scope
          workflow_id: ${{ steps.get-workflow-id.outputs.workflow_file_name }}
          org_name: 'battelleecology' # Replace with your GitHub organization name
          repo_name: 'neon-is-data-processing' # Replace with your GitHub repository name
          max_wait_minutes: '1' # Maximum time to wait (in minutes)
          interval: '30' # Interval between checks (in seconds)
#     ref: ${{ github.ref }} # The branch/ref to monitor for the workflow run
     # 
     #  - name: Put file
     #    uses: ./.github/actions/put-files
     #    with:
     #      pachd_address: ${{ env.PACHD_ADDRESS }}
     #      pach_token: ${{ env.PACH_TOKEN }}
     #      repo_name: ${{ env.REPO }}
     #      branch_name: ${{ env.BRANCH }}
     #      in_paths: ${{ env.IN_PATHS }}
     #      out_paths: ${{ env.OUT_PATHS }}
