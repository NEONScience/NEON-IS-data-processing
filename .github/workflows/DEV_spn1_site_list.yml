name: DEV-spn1-site-list
on:
  push:
    branches: 
      - 'master'
    paths:
      - 'pipe/spn1/site-list.json'
  workflow_dispatch: {} # Allows trigger of workflow from web interface

# Workflow-level concurrency
concurrency: 
  group: ${{
      contains(github.workflow, 'update-dag') ||
      contains(github.workflow, 'site-list') && 'operations-queue'
    || github.workflow
    }}
  cancel-in-progress: false  # Queue them up, don't cancel

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
  # Use github and google registries
  GHCR_REGISTRY: ghcr.io
  GCP_PROVIDER:  ${{ vars.SHARED_WIF_PROVIDER }}
  GCP_SERVICE_ACCOUNT: ${{ vars.SHARED_WIF_SERVICE_ACCOUNT }}

jobs:
  put_files:
    runs-on: arc-neon-gke
    #runs-on: ubuntu-latest
    permissions:
        contents: 'write'
        security-events: write
        packages: write
        id-token: 'write'
        pull-requests: 'write' 
    env:
      PACHD_ADDRESS: grpcs://pachyderm-dev.transitions-nonprod.gcp.neoninternal.org:443
      PACH_TOKEN: ${{ secrets.RepoOwnerPachydermDev }}
      REPO: spn1_site_list # Pachyderm repo
      BRANCH: master 
      IN_PATHS: 'pipe/spn1/site-list.json' # Comma-separated list (no spaces) to one or more paths or directories. Length must match OUT_PATHS. If directory, all files in directory will be placed in pachyderm at corresponding entry of OUT_PATHS. 
      OUT_PATHS: 'site-list.json' # Comma-separated list (no spaces) of corresponding path(s) to place the files(s) in Pachyderm. Must be same length as IN_PATHS. If corresponding entry in IN_PATHS is a file, specify to the file. If corresponding entry in IN_PATHS is a directory, specify to the directory. 
    steps:
      - uses: actions/checkout@v4
      - run: ls -la 
      
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
            workload_identity_provider: ${{ env.GCP_PROVIDER }}
            service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      
      # Login to github registry
      - name: Log into github registry ${{ env.GHCR_REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Get Workflow ID
        id: get-workflow-id
        shell: bash
        run: |
          # Use bash-scrict mode. See http://redsymbol.net/articles/unofficial-bash-strict-mode/
          set -euo pipefail
          IFS=$'\n\t'
          WORKFLOW_REF="${{ github.workflow_ref }}"
          WORKFLOW_FILE="$(echo "${{ github.workflow_ref }}" | cut -d'@' -f1 |  rev | cut -d'/' -f1 | rev)"
          echo "WORKFLOW_FILE=${WORKFLOW_FILE}" >> $GITHUB_ENV
          echo "Workflow ref: ${WORKFLOW_REF}"
          echo "Workflow file: ${WORKFLOW_FILE}"
          if [[ "$WORKFLOW_FILE" == *_site_list.yml ]] || 
             [[ "$WORKFLOW_FILE" == *_update_dag.yml ]]; then
            echo "This is the site_list or update_dag workflow"
            echo "Possibly gh not installed"
            echo "Possibly failed before::::::::::  gh run list"
            gh run list --repo NEONScience/NEON-IS-data-processing
            # Below need api
            # gh run view RUN_ID --repo NEONScience/NEON-IS-data-processing
            # gh api repos/NEONScience/NEON-IS-data-processing/actions/runs/RUN_ID/jobs
          fi

      - name: Put file
        uses: ./.github/actions/put-files
        with:
          pachd_address: ${{ env.PACHD_ADDRESS }}
          pach_token: ${{ env.PACH_TOKEN }}
          repo_name: ${{ env.REPO }}
          branch_name: ${{ env.BRANCH }}
          in_paths: ${{ env.IN_PATHS }}
          out_paths: ${{ env.OUT_PATHS }}
