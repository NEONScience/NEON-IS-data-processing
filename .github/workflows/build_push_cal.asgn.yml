name: "Build-push-update_NEONprocIS.cal"

on:
  push:
    tags:
      - "NEONprocIS.cal/v*.*.*"
  workflow_dispatch: {} # Allows trigger of workflow from web interface
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
  # Use github and google registries
  GHCR_REGISTRY: ghcr.io
  # GHCR_NS, i.e, NEONSciene, in lowercase
  # GHCR_NS: ${{ github.repository_owner }}
  GHCR_NS: ${{ vars.SHARED_WIF_REPO }}
  GCP_ARTIFACT_HOST: ${{ vars.SHARED_WIF_LOCATON }}-docker.pkg.dev
  GCP_REGISTRY: ${{ vars.SHARED_WIF_LOCATON }}-docker.pkg.dev/${{ vars.SHARED_WIF_PROJECT }}/${{ vars.SHARED_WIF_REPO }}
  GCP_PROVIDER:  ${{ vars.SHARED_WIF_PROVIDER }}
  GCP_SERVICE_ACCOUNT: ${{ vars.SHARED_WIF_SERVICE_ACCOUNT }}
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}
  # Get just the repo name from the event, i.e., NEON-IS-data-processing
  # REPO_NAME: ${{ github.event.repository.name }}
  REPO_NAME: neon-is-data-processing
  # IS module name
  MODULE_PATH: ./pack/NEONprocIS.cal
  IMAGE_NAME: neon-is-pack-cal-r

jobs:
  build-push-update:
    runs-on: ubuntu-latest
    permissions:
        contents: 'write'
        security-events: write
        packages: write
        id-token: 'write'
        pull-requests: 'write'

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4.1.4"
        with:
   #       ref: 'master'
          fetch-depth: '0'

        # Note: must clone other repos AFTER checking out the repo where the action is run from. 
        # Otherwise, previously cloned repos are removed.
      - name: "Clone avro"
        uses: actions/checkout@v4
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'BattelleEcology/avro'
          
          # The branch, tag or SHA to checkout. When checking out the repository that
          # triggered a workflow, this defaults to the reference or SHA for that event.
          # Otherwise, uses the default branch.
          ref: 'release-1.10.0'
          #fetch-depth: '0' 
          
          # SSH key used to fetch the repository. The SSH key is configured with the local
          # git config, which enables your scripts to run authenticated git commands. The
          # post-job step removes the SSH key.
          #
          # We recommend using a service account with the least permissions necessary.
          #
          # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
          # Note: when generating the key, use the following: ssh-keygen -t ed25519 -C "git@github.com"
          ssh-key: ${{ secrets.BE_GITHUB_KEY }}
          
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: './avro'

      - name: Get short SHA
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get semver
        run:  echo "semver=$(git describe --tags --abbrev=0 --match=NEONprocIS.cal/v*.*.* | awk -F "/" '{print $2}')" >> $GITHUB_ENV 

      - name: Build push and update
        uses: ./.github/actions/build-push-update
